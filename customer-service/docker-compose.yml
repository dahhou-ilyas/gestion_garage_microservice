version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring-customer-service
    ports:
      - "8081:8081"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=customer_db
      - DB_USERNAME=user
      - DB_PASSWORD=password
      - SPRING_PROFILES_ACTIVE=prod
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka:8761/eureka/
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - spring-network
    deploy:
      resources:
        limits:
          memory: 1G
    restart: unless-stopped

  postgres:
    image: postgres:14-alpine
    container_name: postgres-db
    environment:
      - POSTGRES_DB=customer_db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - spring-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d customer_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

networks:
  spring-network:
    name: spring-network
    driver: bridge

volumes:
  postgres_data:
    name: postgres_data